[{"H:\\movie-party\\client\\src\\index.js":"1","H:\\movie-party\\client\\src\\App.js":"2","H:\\movie-party\\client\\src\\components\\Join\\JoinRoom.js":"3","H:\\movie-party\\client\\src\\components\\Socket.js":"4","H:\\movie-party\\client\\src\\utils\\adjectives.js":"5","H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Chat.js":"6","H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueItem.js":"7","H:\\movie-party\\client\\src\\components\\Room\\Room.js":"8","H:\\movie-party\\client\\src\\utils\\generateWords.js":"9","H:\\movie-party\\client\\src\\utils\\nouns.js":"10","H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Messages\\Messages.js":"11","H:\\movie-party\\client\\src\\components\\Panel\\Chat\\ChatInput\\ChatInput.js":"12","H:\\movie-party\\client\\src\\reportWebVitals.js":"13","H:\\movie-party\\client\\src\\components\\Panel\\Panel.js":"14","H:\\movie-party\\client\\src\\utils\\userInfo.js":"15","H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Messages\\Message\\Message.js":"16","H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueHistory.js":"17","H:\\movie-party\\client\\src\\components\\Panel\\Settings\\Settings.js":"18","H:\\movie-party\\client\\src\\components\\Panel\\Users\\Users.js":"19","H:\\movie-party\\client\\src\\components\\Video\\Player\\Player.js":"20","H:\\movie-party\\client\\src\\components\\Video\\Search\\Search.js":"21","H:\\movie-party\\client\\src\\components\\Video\\Video.js":"22","H:\\movie-party\\client\\src\\components\\Video\\Player\\Slider.js":"23","H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\SearchResults.js":"24","H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\ListItem.js":"25","H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueList.js":"26","H:\\movie-party\\client\\src\\components\\Logo\\Logo.js":"27","H:\\movie-party\\client\\src\\components\\Video\\Player\\Controls.js":"28","H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\List.js":"29","H:\\movie-party\\client\\src\\utils\\video.js":"30","H:\\movie-party\\client\\src\\components\\Panel\\VideoChat\\VideoChat.js":"31","H:\\movie-party\\client\\src\\components\\Panel\\VideoChat\\ChatVideo\\ChatVideo.js":"32"},{"size":500,"mtime":1607979670262,"results":"33","hashOfConfig":"34"},{"size":610,"mtime":1608086017717,"results":"35","hashOfConfig":"34"},{"size":1840,"mtime":1609988135498,"results":"36","hashOfConfig":"34"},{"size":192,"mtime":1610009267015,"results":"37","hashOfConfig":"34"},{"size":61931,"mtime":1608084660500,"results":"38","hashOfConfig":"34"},{"size":1123,"mtime":1608160664691,"results":"39","hashOfConfig":"34"},{"size":1362,"mtime":1608160078345,"results":"40","hashOfConfig":"34"},{"size":8388,"mtime":1610005503893,"results":"41","hashOfConfig":"34"},{"size":657,"mtime":1608084633733,"results":"42","hashOfConfig":"34"},{"size":25528,"mtime":1608084676671,"results":"43","hashOfConfig":"34"},{"size":614,"mtime":1608160416802,"results":"44","hashOfConfig":"34"},{"size":1621,"mtime":1610010313437,"results":"45","hashOfConfig":"34"},{"size":362,"mtime":1607979670262,"results":"46","hashOfConfig":"34"},{"size":4002,"mtime":1609994771338,"results":"47","hashOfConfig":"34"},{"size":1113,"mtime":1608175517295,"results":"48","hashOfConfig":"34"},{"size":2232,"mtime":1608607972329,"results":"49","hashOfConfig":"34"},{"size":2661,"mtime":1608160001345,"results":"50","hashOfConfig":"34"},{"size":3532,"mtime":1608883266873,"results":"51","hashOfConfig":"34"},{"size":743,"mtime":1608158515890,"results":"52","hashOfConfig":"34"},{"size":13365,"mtime":1608449623783,"results":"53","hashOfConfig":"34"},{"size":5726,"mtime":1608608522966,"results":"54","hashOfConfig":"34"},{"size":7052,"mtime":1610013187969,"results":"55","hashOfConfig":"34"},{"size":7918,"mtime":1608449673208,"results":"56","hashOfConfig":"34"},{"size":1326,"mtime":1607978263296,"results":"57","hashOfConfig":"34"},{"size":1508,"mtime":1607978263296,"results":"58","hashOfConfig":"34"},{"size":622,"mtime":1608161116388,"results":"59","hashOfConfig":"34"},{"size":295,"mtime":1608085127875,"results":"60","hashOfConfig":"34"},{"size":5158,"mtime":1608453667911,"results":"61","hashOfConfig":"34"},{"size":550,"mtime":1607978263296,"results":"62","hashOfConfig":"34"},{"size":3037,"mtime":1608449401437,"results":"63","hashOfConfig":"34"},{"size":5028,"mtime":1610013263603,"results":"64","hashOfConfig":"34"},{"size":475,"mtime":1610013430065,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"ljog0t",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\movie-party\\client\\src\\index.js",[],["142","143"],"H:\\movie-party\\client\\src\\App.js",[],["144","145"],"H:\\movie-party\\client\\src\\components\\Join\\JoinRoom.js",[],"H:\\movie-party\\client\\src\\components\\Socket.js",[],"H:\\movie-party\\client\\src\\utils\\adjectives.js",[],["146","147"],"H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Chat.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueItem.js",[],"H:\\movie-party\\client\\src\\components\\Room\\Room.js",["148"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { store } from 'react-notifications-component';\r\nimport invert from 'invert-color';\r\nimport { getRandomColor } from '../../utils/userInfo';\r\nimport { Dimmer, Loader, Transition } from 'semantic-ui-react';\r\nimport { generateWords } from '../../utils/generateWords';\r\nimport Panel from \"../Panel/Panel\";\r\nimport Video from '../Video/Video';\r\nimport { sckt } from '../Socket';\r\nimport './Room.scss';\r\nimport { getVideoType } from '../../utils/video';\r\n\r\nconst Room = ({ location, history, match }) => {\r\n\r\n    const playerRef = useRef(null);\r\n    const [currUser, setCurrUser] = useState({\r\n        id: '',\r\n        name: JSON.parse(localStorage.getItem('name')),\r\n        colors: JSON.parse(localStorage.getItem('colors'))\r\n    });\r\n    const [room, setRoom] = useState('');\r\n\r\n\r\n    const [videoProps, setVideoProps] = useState({\r\n        queue: [],\r\n        history: [],\r\n        playing: true,\r\n        seekTime: 0,\r\n        receiving: false,\r\n        initVideo: false,\r\n        videoType: 'yt' // 'vimeo', 'twitch', 'soundcloud'\r\n    });\r\n    const [users, setUsers] = useState([]);\r\n    const [isJoined, setIsJoined] = useState(false);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('name', JSON.stringify(currUser.name));\r\n    }, [currUser.name])\r\n    useEffect(() => {\r\n        localStorage.setItem('colors', JSON.stringify(currUser.colors));\r\n    }, [currUser.colors])\r\n\r\n    useEffect(() => {\r\n        const handler = ({ users }) => setUsers(users);\r\n        sckt.socket.on(\"roomData\", handler);\r\n        return () => sckt.socket.off('roomData', handler);\r\n    }, []);\r\n    const updateCurrUser = (paramsToChange) => {\r\n        setCurrUser((prev) => ({ ...prev, ...paramsToChange }));\r\n    }\r\n    const updateVideoProps = (paramsToChange) => {\r\n        setVideoProps((prev) => ({ ...prev, ...paramsToChange }));\r\n    }\r\n    const sendVideoState = ({ eventName, eventParams }) => {\r\n        let params = {\r\n            name: currUser.name,\r\n            room: room,\r\n            eventName: eventName,\r\n            eventParams: eventParams\r\n        };\r\n        sckt.socket.emit('sendVideoState', params, (error) => { });\r\n    };\r\n\r\n    // Video.js\r\n    const loadVideo = (searchItem, sync) => {\r\n        const { playing, seekTime, initVideo } = videoProps;\r\n        if ((playerRef.current !== null || !initVideo) && searchItem) {\r\n            if (!initVideo) updateVideoProps({ initVideo: true });\r\n            let videoUrl = searchItem.video.url;\r\n            if (sync) {\r\n                updateVideoProps({ url: videoUrl });\r\n                updateVideoProps({ playing });\r\n                updateVideoProps({ receiving: false });\r\n                playerRef.current.seekTo(seekTime, 'seconds');\r\n            } else {\r\n                updateVideoProps({ url: videoUrl });\r\n                updateVideoProps({ playing: true });\r\n                updateVideoProps({ receiving: false });\r\n            }\r\n            // sckt.socket.emit('updateRoomData', { video: searchItem }, (error) => { });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const playVideoFromSearch = (searchItem) => {\r\n        const url = searchItem.video.url;\r\n        const videoType = getVideoType(url);\r\n        if (videoType !== null) {\r\n            updateVideoProps({ videoType });\r\n        }\r\n        // Handle playing video immediately\r\n        const { history } = videoProps;\r\n        loadVideo(searchItem, false);\r\n        sendVideoState({\r\n            eventName: \"syncLoad\",\r\n            eventParams: { searchItem, history: [searchItem, ...history] }\r\n        });\r\n        updateVideoProps({ history: [searchItem, ...history] });\r\n    }\r\n    const log = (msg, type) => {\r\n        let baseStyles = [\r\n            \"color: #fff\",\r\n            \"background-color: #444\",\r\n            \"padding: 2px 4px\",\r\n            \"border-radius: 2px\"\r\n        ].join(';');\r\n        let serverStyles = [\r\n            \"background-color: gray\"\r\n        ].join(';');\r\n        let otherStyles = [\r\n            \"color: #eee\",\r\n            \"background-color: red\"\r\n        ].join(';');\r\n        let meStyles = [\r\n            \"background-color: green\"\r\n        ].join(';');\r\n        // Set style based on input type\r\n        let style = baseStyles + ';';\r\n        switch (type) {\r\n            case \"server\": style += serverStyles; break;\r\n            case \"other\": style += otherStyles; break;\r\n            case \"me\": style += meStyles; break;\r\n            case \"none\": style = ''; break;\r\n            default: break;\r\n        }\r\n        console.log(`%c${msg}`, style);\r\n    }\r\n    // From JoinRoom.js \r\n    useEffect(() => {\r\n        const room = match.params.roomName.trim();\r\n        if (room.length > 0) {\r\n            sckt.socket.emit('checkRoomExists', { room }, (exists) => {\r\n                // We set location.state in JoinRoom.js\r\n                if (exists || location.state) {\r\n                    setRoom(room);\r\n                    let name = currUser.name;\r\n                    if (!name) { // If no name in localStorage\r\n                        name = generateWords({ delimiter: ' ', shouldCap: true })\r\n                        updateCurrUser({ name });\r\n                    }\r\n                    let colors = currUser.colors;\r\n                    // if (!colors) { // If no colors in localStorage\r\n                    //     const bg = getRandomColor();\r\n                    //     const txt = invertColor(bg);\r\n                    //     colors = { bg, txt };\r\n                    //     updateCurrUser({ colors });\r\n                    // }\r\n                    const bg = getRandomColor();\r\n                    const txt = invert(bg);\r\n                    colors = { bg, txt };\r\n                    updateCurrUser({ colors });\r\n\r\n                    sckt.socket.emit('join', { name, room, colors }, ({ id }) => {\r\n                        updateCurrUser({ id });\r\n                        setTimeout(() => {\r\n                            setIsJoined(true);\r\n                        }, 750);\r\n                    });\r\n                } else {\r\n                    history.push('/');\r\n                    store.addNotification({\r\n                        title: \"Oops!\",\r\n                        message: `It seems like the room \"${room}\" doesn't exist. Go ahead and create a new room!`,\r\n                        type: \"danger\",\r\n                        insert: \"top\",\r\n                        container: \"bottom-right\",\r\n                        animationIn: [\"animated\", \"fadeInUp\"],\r\n                        animationOut: [\"animated\", \"fadeOut\"],\r\n                        dismiss: {\r\n                            duration: 5000,\r\n                            onScreen: false\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        // sckt.socket.emit('createRoom', { room }, () => {});\r\n        // sckt.socket.on(\"roomData\", ({ users }) => {\r\n        //     setUsers(users);\r\n        // });\r\n    }, [location.pathname, history]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(videoProps.playing);\r\n    // }, [videoProps.playing])\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <Transition visible={!isJoined} animation='fade' duration={500}>\r\n                <Dimmer active={!isJoined}>\r\n                    <Loader>Joining Room...</Loader>\r\n                </Dimmer>\r\n            </Transition>\r\n            <Video\r\n                log={log}\r\n                currUser={currUser}\r\n                users={users}\r\n                room={room}\r\n                videoProps={videoProps}\r\n                updateVideoProps={updateVideoProps}\r\n                playerRef={playerRef}\r\n                sendVideoState={sendVideoState}\r\n                loadVideo={loadVideo}\r\n                playVideoFromSearch={playVideoFromSearch}\r\n            />\r\n            <Panel\r\n                currUser={currUser}\r\n                updateCurrUser={updateCurrUser}\r\n                room={room}\r\n                history={history}\r\n                videoProps={videoProps}\r\n                updateVideoProps={updateVideoProps}\r\n                playerRef={playerRef}\r\n                sendVideoState={sendVideoState}\r\n                playVideoFromSearch={playVideoFromSearch}\r\n                users={users}\r\n                setUsers={setUsers}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room;","H:\\movie-party\\client\\src\\utils\\generateWords.js",[],["149","150"],"H:\\movie-party\\client\\src\\utils\\nouns.js",[],["151","152"],"H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Messages\\Messages.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\Chat\\ChatInput\\ChatInput.js",[],"H:\\movie-party\\client\\src\\reportWebVitals.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\Panel.js",["153"],"import React from \"react\";\r\n// import ReactTooltip from \"react-tooltip\";\r\nimport { Icon, Menu, Tab, Transition } from 'semantic-ui-react';\r\nimport Chat from './Chat/Chat';\r\nimport './Panel.scss';\r\nimport QueueHistory from './QueueHistory/QueueHistory';\r\nimport Settings from './Settings/Settings';\r\nimport Users from './Users/Users';\r\nimport VideoChat from './VideoChat/VideoChat';\r\n\r\nconst Panel = ({\r\n    currUser,\r\n    updateCurrUser,\r\n    room,\r\n    history,\r\n    videoProps,\r\n    updateVideoProps,\r\n    playerRef,\r\n    sendVideoState,\r\n    playVideoFromSearch,\r\n    users\r\n}) => {\r\n\r\n    const videoPanes = [\r\n        {\r\n            menuItem: { key: 'queue', content: 'Queue' },\r\n            pane: (\r\n                <Tab.Pane key='queue'>\r\n                    <QueueHistory\r\n                        currUser={currUser}\r\n                        room={room}\r\n                        videoProps={videoProps}\r\n                        updateVideoProps={updateVideoProps}\r\n                        playerRef={playerRef}\r\n                        isQueue={true}\r\n                        sendVideoState={sendVideoState}\r\n                        playVideoFromSearch={playVideoFromSearch}\r\n                    />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: { key: 'history', content: 'History' },\r\n            pane: (\r\n                <Tab.Pane key='history'>\r\n                    <QueueHistory\r\n                        currUser={currUser}\r\n                        room={room}\r\n                        videoProps={videoProps}\r\n                        updateVideoProps={updateVideoProps}\r\n                        playerRef={playerRef}\r\n                        isQueue={false}\r\n                        sendVideoState={sendVideoState}\r\n                        playVideoFromSearch={playVideoFromSearch}\r\n                    />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ]\r\n    const panes = [\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='chat'>\r\n                    <Icon name='chat' />\r\n                </Menu.Item>\r\n            ),\r\n            pane: (\r\n                <Tab.Pane key='chat'>\r\n                    <Chat\r\n                        currUser={currUser}\r\n                        users={users}\r\n                    />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='video'>\r\n                    <Icon name='video' />\r\n                </Menu.Item>\r\n            ),\r\n            pane: (\r\n                <Tab.Pane key='videos'>\r\n                    <Tab panes={videoPanes} renderActiveOnly={false} className=\"subTabs\" />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='users'>\r\n                    <Icon name='users' />{users.length}\r\n                </Menu.Item>\r\n            ),\r\n            pane: (\r\n                <Tab.Pane key='users'>\r\n                    <Users\r\n                        users={users}\r\n                    />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='settings'>\r\n                    <Icon name='cog' />\r\n                </Menu.Item>\r\n            ),\r\n            pane: (\r\n                <Tab.Pane key='settings'>\r\n                    <Settings\r\n                        currUser={currUser}\r\n                        updateCurrUser={updateCurrUser}\r\n                        room={room}\r\n                        history={history}\r\n                        users={users}\r\n                    />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <Transition visible={currUser.id !==null? true : false} animation='vertical flip' duration={500}>\r\n        <div className=\"panelContainer\">\r\n            <Tab panes={panes} renderActiveOnly={false} />\r\n        </div>\r\n        </Transition>\r\n    );\r\n}\r\n\r\nexport default Panel;","H:\\movie-party\\client\\src\\utils\\userInfo.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Messages\\Message\\Message.js",[],["154","155"],"H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueHistory.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\Settings\\Settings.js",[],["156","157"],"H:\\movie-party\\client\\src\\components\\Panel\\Users\\Users.js",[],"H:\\movie-party\\client\\src\\components\\Video\\Player\\Player.js",["158","159"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport screenful from \"screenfull\";\r\nimport Controls from \"./Controls\";\r\n\r\nimport './Player.scss';\r\n\r\nlet count = 0;\r\n\r\nfunction iOS() {\r\n    return [\r\n        'iPad Simulator',\r\n        'iPhone Simulator',\r\n        'iPod Simulator',\r\n        'iPad',\r\n        'iPhone',\r\n        'iPod'\r\n    ].includes(navigator.platform)\r\n        // iPad on iOS 13 detection\r\n        || (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\r\n}\r\n\r\nfunction Player({ videoProps, sendVideoState, updateVideoProps, loadVideo, loadFromQueue, playerRef }) {\r\n    const [isVideoStarted, setIsVideoStarted] = useState(false);\r\n    const [isVideoEnded, setIsVideoEnded] = useState(false);\r\n    const [state, setState] = useState({\r\n        pip: false,\r\n        playing: false,\r\n        light: false,\r\n        muted: false,\r\n        played: 0,\r\n        duration: 0,\r\n        playbackRate: 1.0,\r\n        volume: 1.0,\r\n        seeking: false,\r\n        isFullscreen: false,\r\n        jumpedTime: 0\r\n    });\r\n\r\n    const playerContainerRef = useRef(null);\r\n    const controlsRef = useRef(null);\r\n\r\n    const currentTime = (playerRef && playerRef.current) ? playerRef.current.getCurrentTime() : 0;\r\n    const duration = (playerRef && playerRef.current) ? playerRef.current.getDuration() : 0;\r\n    // const elapsedTime = timeDisplayFormat == \"normal\" ? format(currentTime) : `-${format(duration - currentTime)}`;\r\n    // const totalDuration = format(duration);\r\n\r\n    const {\r\n        light,\r\n        muted,\r\n        playbackRate,\r\n        pip,\r\n        seeking,\r\n        volume,\r\n        isFullscreen,\r\n        jumpedTime\r\n    } = state;\r\n\r\n    const {\r\n        queue,\r\n        history,\r\n        playing,\r\n        seekTime,\r\n        receiving,\r\n        initVideo,\r\n        videoType\r\n    } = videoProps;\r\n\r\n    const handlePlayPause = () => {\r\n        const seekTime = playerRef.current.getCurrentTime();\r\n        if (playing) {\r\n            // Going to pause\r\n            updateVideoProps({\r\n                playing: false,\r\n                seekTime,\r\n                receiving: false\r\n            });\r\n            sendVideoState({\r\n                eventName: 'syncPause',\r\n                eventParams: { seekTime }\r\n            });\r\n            if (isVideoEnded) playerRef.current.seekTo(0);\r\n            // console.log(\"PAUSING\")\r\n        } else {\r\n            // Going to play\r\n            updateVideoProps({\r\n                playing: true,\r\n                seekTime,\r\n                receiving: false\r\n            });\r\n            sendVideoState({\r\n                eventName: 'syncPlay',\r\n                eventParams: { seekTime }\r\n            });\r\n            // console.log(\"PLAYING\")\r\n        }\r\n    };\r\n\r\n    const handleRewind = () => {\r\n        let newTime = playerRef.current.getCurrentTime() - 10;\r\n        if (newTime < 0) newTime = 0;\r\n        playerRef.current.seekTo(newTime);\r\n        setState({ ...state, seeking: true, jumpedTime: newTime });\r\n        sendVideoState({\r\n            eventName: 'syncPlay',\r\n            eventParams: { seekTime: newTime }\r\n        });\r\n    };\r\n\r\n    const handleFastForward = () => {\r\n        let newTime = playerRef.current.getCurrentTime() + 10;\r\n        if (duration && newTime > duration) newTime = duration;\r\n        playerRef.current.seekTo(newTime);\r\n        setState({ ...state, seeking: true, jumpedTime: newTime });\r\n        sendVideoState({\r\n            eventName: 'syncPlay',\r\n            eventParams: { seekTime: newTime }\r\n        });\r\n    };\r\n\r\n    const handleProgress = (changeState) => {\r\n        if (count > 1) {\r\n            hideControls();\r\n            count = 0;\r\n        }\r\n        if (controlsRef.current.style.opacity === 1) {\r\n            count += 1;\r\n        }\r\n        if (!seeking) {\r\n            setState({ ...state, ...changeState });\r\n        }\r\n    };\r\n    const handleSeekMouseDown = (newTime) => {\r\n        // // const newTime = getProgressBarTime(e);\r\n        // newTime = newTime[0]\r\n        console.log(\"DOWN\", newTime);\r\n        // // setState({ ...state, seeking: true, played: parseFloat(newTime / 100) });\r\n        // playerRef.current.seekTo(newTime, \"seconds\");\r\n        // sendVideoState({\r\n        //     eventName: 'syncSeek',\r\n        //     eventParams: { seekTime: newTime }\r\n        // });\r\n    };\r\n    const handleSeek = (newTime) => {\r\n        newTime = newTime[0];\r\n        if (newTime < 0) newTime = 0;\r\n        else if (duration && newTime > duration) newTime = duration;\r\n        setState({ ...state, seeking: true, jumpedTime: newTime });\r\n        playerRef.current.seekTo(newTime, \"seconds\");\r\n        sendVideoState({\r\n            eventName: 'syncSeek',\r\n            eventParams: { seekTime: newTime }\r\n        });\r\n    }\r\n    const handleVolumeChange = (newValue) => {\r\n        newValue = newValue[0];\r\n        if (newValue < 0) newValue = 0;\r\n        else if (newValue > 1) newValue = 1;\r\n        setState({\r\n            ...state,\r\n            volume: parseFloat(newValue),\r\n            muted: newValue === 0 ? true : false,\r\n        });\r\n    };\r\n\r\n    const toggleFullScreen = () => {\r\n        screenful.toggle(playerContainerRef.current);\r\n    }\r\n    const handleMouseMove = () => {\r\n        showControls();\r\n        count = 0;\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setTimeout(function () {\r\n            hideControls();\r\n            count = 0;\r\n        }, 200);\r\n    };\r\n\r\n    const handlePlaybackRate = (rate) => {\r\n        if (rate === 0) rate = 0.5;\r\n        setState({ ...state, playbackRate: rate });\r\n        updateVideoProps({ receiving: false });\r\n        let eventParams = { playbackRate: rate };\r\n        sendVideoState({\r\n            eventName: 'syncRateChange',\r\n            eventParams: eventParams\r\n        });\r\n    };\r\n\r\n    const handleMute = () => {\r\n        setState({ ...state, muted: !muted });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!iOS())\r\n            screenful.on('change', () => setState({ ...state, isFullscreen: screenful.isFullscreen }));\r\n    }, [])\r\n\r\n    const showControls = () => {\r\n        if (isVideoStarted || iOS()) {\r\n            controlsRef.current.style.opacity = 1;\r\n            controlsRef.current.style.pointerEvents = \"auto\";\r\n            controlsRef.current.style.cursor = \"auto\";\r\n            playerContainerRef.current.style.cursor = \"auto\";\r\n        }\r\n    }\r\n    const hideControls = () => {\r\n        controlsRef.current.style.opacity = 0;\r\n        controlsRef.current.style.pointerEvents = \"none\";\r\n        controlsRef.current.style.cursor = \"none\";\r\n        playerContainerRef.current.style.cursor = \"none\";\r\n    }\r\n    const handleVideoClick = (e) => {\r\n        if (e.target === e.currentTarget && (isVideoStarted || iOS())) handlePlayPause()\r\n    }\r\n    const onPlay = () => {\r\n        setIsVideoEnded(false);\r\n        setState({ ...state, seeking: false });\r\n    }\r\n    const onPause = () => {\r\n        setState({ ...state, seeking: false });\r\n    }\r\n    const onEnded = () => {\r\n        updateVideoProps({ playing: false });\r\n        setIsVideoEnded(true);\r\n        if (receiving) {\r\n            updateVideoProps({ receiving: false });\r\n        } else {\r\n            // log(\"ENDING\", 'me');\r\n            if (queue.length > 0) {\r\n                updateVideoProps({ playing: true });\r\n                sendVideoState({\r\n                    eventName: 'syncLoadFromQueue',\r\n                    eventParams: {\r\n                        queue: queue,\r\n                    }\r\n                });\r\n                loadFromQueue(queue);\r\n            }\r\n        }\r\n    }\r\n    const onReady = () => {\r\n        if (receiving) {\r\n            loadVideo(history[0], true);\r\n            if (!playing) setIsVideoStarted(true);\r\n            else setIsVideoStarted(false);\r\n        }\r\n    }\r\n    const onStart = () => {\r\n        if (!receiving)\r\n            setIsVideoStarted(true);\r\n    }\r\n\r\n    const code = (e) => {\r\n        e = e || window.event;\r\n        return (e.key || e.keyCode || e.which);\r\n    }\r\n    const setKeyboardShortcuts = (e) => {\r\n        e.preventDefault();\r\n        let key = code(e);\r\n        // console.log(key);\r\n        switch (key) {\r\n            // case ' ':\r\n            // case 'k':\r\n            //     handlePlayPause()\r\n            //     break;\r\n            // case 'm':\r\n            //     handleMute();\r\n            //     break;\r\n            case 'ArrowLeft':\r\n            case 'j':\r\n                handleRewind();\r\n                break;\r\n            case 'ArrowRight':\r\n            case 'l':\r\n                handleFastForward();\r\n                break;\r\n            case 'f':\r\n                toggleFullScreen();\r\n                break;\r\n            // case 'i':\r\n            //     // enablePip();\r\n            //     break;\r\n            // case 'c':\r\n            //     // enable captions\r\n            //     break;\r\n            // case 'ArrowUp':\r\n            //     handleVolumeChange([volume + 0.2]);\r\n            //     break;\r\n            // case 'ArrowDown':\r\n            //     handleVolumeChange([volume - 0.2]);\r\n            //     break;\r\n            default:\r\n                break\r\n            // // Is a number\r\n            // if (isFinite(key)) {\r\n            // }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // let clickCount = 0;\r\n        // let singleClickTimer;\r\n        const handleClickFocus = (e) => {\r\n            let player = playerContainerRef.current;\r\n            if (!player) return;\r\n            if (!player.contains(e.target)) {\r\n                document.removeEventListener('keydown', setKeyboardShortcuts);\r\n            } else if (e.target.classList.contains('videoPlayerContainer')) {\r\n                document.addEventListener('keydown', setKeyboardShortcuts);\r\n                // clickCount++;\r\n                // if (clickCount === 1) {\r\n                //     singleClickTimer = setTimeout(function () {\r\n                //         clickCount = 0;\r\n                //         // handleVideoClick();\r\n                //     }, 300);\r\n                // } else if (clickCount === 2) {\r\n                //     clearTimeout(singleClickTimer);\r\n                //     clickCount = 0;\r\n                //     toggleFullScreen();\r\n                // }\r\n            }\r\n        }\r\n        document.addEventListener('click', handleClickFocus);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickFocus);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                onMouseMove={handleMouseMove}\r\n                onMouseLeave={handleMouseLeave}\r\n                ref={playerContainerRef}\r\n                className='videoPlayerContainer'\r\n                style={{ display: initVideo ? 'block' : 'none' }}\r\n                onClick={handleVideoClick}\r\n            >\r\n                <ReactPlayer\r\n                    ref={playerRef}\r\n                    className='videoPlayer'\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    url={history[0] ? history[0].video.url : ''}\r\n                    pip={pip}\r\n                    playing={playing}\r\n                    controls={false}\r\n                    light={light}\r\n                    loop={false}\r\n                    playbackRate={playbackRate}\r\n                    volume={volume}\r\n                    muted={muted}\r\n                    onProgress={handleProgress}\r\n                    onEnded={onEnded}\r\n                    onReady={onReady}\r\n                    onStart={onStart}\r\n                    onPlay={onPlay}\r\n                    onPause={onPause}\r\n                    config={{\r\n                        file: {\r\n                            attributes: {\r\n                                crossOrigin: \"anonymous\",\r\n                            },\r\n                        },\r\n                        vimeo: { playerOptions: { controls: false } },\r\n                        soundcloud: {\r\n                            options: {\r\n                                buying: false,\r\n                                sharing: false,\r\n                                download: false,\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n                <Controls\r\n                    ref={controlsRef}\r\n                    onSeekMouseDown={handleSeekMouseDown}\r\n                    onSeekMouseUp={handleSeek}\r\n                    onRewind={handleRewind}\r\n                    onPlayPause={handlePlayPause}\r\n                    onFastForward={handleFastForward}\r\n                    playing={playing}\r\n                    onMute={handleMute}\r\n                    muted={muted}\r\n                    onVolumeChange={handleVolumeChange}\r\n                    playbackRate={playbackRate}\r\n                    onPlaybackRateChange={handlePlaybackRate}\r\n                    onToggleFullScreen={toggleFullScreen}\r\n                    volume={volume}\r\n                    currentTime={currentTime}\r\n                    duration={duration}\r\n                    seekTime={seekTime}\r\n                    seeking={seeking}\r\n                    isFullscreen={isFullscreen}\r\n                    jumpedTime={jumpedTime}\r\n                    videoType={videoType}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Player;","H:\\movie-party\\client\\src\\components\\Video\\Search\\Search.js",[],"H:\\movie-party\\client\\src\\components\\Video\\Video.js",["160","161","162","163"],"H:\\movie-party\\client\\src\\components\\Video\\Player\\Slider.js",[],"H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\SearchResults.js",[],["164","165"],"H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\ListItem.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueList.js",[],"H:\\movie-party\\client\\src\\components\\Logo\\Logo.js",[],"H:\\movie-party\\client\\src\\components\\Video\\Player\\Controls.js",[],"H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\List.js",[],"H:\\movie-party\\client\\src\\utils\\video.js",["166","167","168","169","170","171","172"],"const insert = (arr, index, newItem) => [\r\n    ...arr.slice(0, index),\r\n    newItem,\r\n    ...arr.slice(index)\r\n];\r\n\r\n// https://stackoverflow.com/questions/3452546/how-do-i-get-the-youtube-video-id-from-a-url\r\nconst youtube_parser = (url) => {\r\n    let regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n    let match = url.match(regExp);\r\n    return (match && match[7].length === 11) ? match[7] : false;\r\n}\r\n// https://stackoverflow.com/questions/28735459 how-to-validate-youtube-url-in-client-side-in-text-box\r\nconst validateYouTubeUrl = (url) => {\r\n    var p = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n    var matches = url.match(p);\r\n    if (matches) {\r\n        return matches[1];\r\n    }\r\n    return false;\r\n}\r\n// Very general URL validation\r\nconst validateVimeoUrl = (url) => {\r\n    return /^(http\\:\\/\\/|https\\:\\/\\/)?(www\\.)?(vimeo\\.com\\/)/.test(url);\r\n}\r\nconst validateTwitchUrl = (url) => {\r\n    return /^(http\\:\\/\\/|https\\:\\/\\/)?(www\\.)?(twitch\\.tv\\/)/.test(url);\r\n}\r\nconst validateSoundCloudUrl = (url) => {\r\n    return /((https:\\/\\/)|(http:\\/\\/)|(www.)|(m\\.)|(\\s))+(soundcloud.com\\/)+[a-zA-Z0-9\\-\\.]+(\\/)+[a-zA-Z0-9\\-\\.]+/.test(url);\r\n}\r\n// function formatTimestamp(input) {\r\n//     if (\r\n//         input === null ||\r\n//         input === undefined ||\r\n//         input === false ||\r\n//         Number.isNaN(input) ||\r\n//         input === Infinity\r\n//     ) {\r\n//         return '';\r\n//     }\r\n//     let minutes = Math.floor(Number(input) / 60);\r\n//     let seconds = Math.floor(Number(input) % 60)\r\n//         .toString()\r\n//         .padStart(2, '0');\r\n//     return `${minutes}:${seconds}`;\r\n// }\r\nconst formatTimestamp = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n        return `00:00`;\r\n    }\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n    if (hh) {\r\n        return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n};\r\nfunction isValidURL(str) {\r\n    var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n        '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n    return !!pattern.test(str);\r\n}\r\n\r\nconst getVideoType = (url) => {\r\n    if (validateYouTubeUrl(url)) {\r\n        return 'yt';\r\n    } else if (validateVimeoUrl(url)) {\r\n        return 'vimeo';\r\n    } else if (validateTwitchUrl(url)) {\r\n        return 'twitch';\r\n        // } else if (validateSoundCloudUrl(url)) {\r\n        //     return 'soundcloud';\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\nexport {\r\n    insert,\r\n    youtube_parser,\r\n    getVideoType,\r\n    isValidURL,\r\n    formatTimestamp\r\n}","H:\\movie-party\\client\\src\\components\\Panel\\VideoChat\\VideoChat.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\VideoChat\\ChatVideo\\ChatVideo.js",["173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"174","replacedBy":"178"},{"ruleId":"176","replacedBy":"179"},{"ruleId":"174","replacedBy":"180"},{"ruleId":"176","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":182,"column":8,"nodeType":"184","endLine":182,"endColumn":36,"suggestions":"185"},{"ruleId":"174","replacedBy":"186"},{"ruleId":"176","replacedBy":"187"},{"ruleId":"174","replacedBy":"188"},{"ruleId":"176","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":17},{"ruleId":"174","replacedBy":"194"},{"ruleId":"176","replacedBy":"195"},{"ruleId":"174","replacedBy":"196"},{"ruleId":"176","replacedBy":"197"},{"ruleId":"182","severity":1,"message":"198","line":199,"column":8,"nodeType":"184","endLine":199,"endColumn":10,"suggestions":"199"},{"ruleId":"182","severity":1,"message":"200","line":329,"column":8,"nodeType":"184","endLine":329,"endColumn":10,"suggestions":"201"},{"ruleId":"190","severity":1,"message":"202","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"203","line":2,"column":39,"nodeType":"192","messageId":"193","endLine":2,"endColumn":44},{"ruleId":"190","severity":1,"message":"204","line":23,"column":40,"nodeType":"192","messageId":"193","endLine":23,"endColumn":52},{"ruleId":"182","severity":1,"message":"205","line":123,"column":8,"nodeType":"184","endLine":123,"endColumn":10,"suggestions":"206"},{"ruleId":"174","replacedBy":"207"},{"ruleId":"176","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":24,"column":19,"nodeType":"211","messageId":"212","endLine":24,"endColumn":20,"suggestions":"213"},{"ruleId":"209","severity":1,"message":"210","line":24,"column":31,"nodeType":"211","messageId":"212","endLine":24,"endColumn":32,"suggestions":"214"},{"ruleId":"209","severity":1,"message":"210","line":27,"column":19,"nodeType":"211","messageId":"212","endLine":27,"endColumn":20,"suggestions":"215"},{"ruleId":"209","severity":1,"message":"210","line":27,"column":31,"nodeType":"211","messageId":"212","endLine":27,"endColumn":32,"suggestions":"216"},{"ruleId":"190","severity":1,"message":"217","line":29,"column":7,"nodeType":"192","messageId":"193","endLine":29,"endColumn":28},{"ruleId":"209","severity":1,"message":"218","line":30,"column":89,"nodeType":"211","messageId":"212","endLine":30,"endColumn":90,"suggestions":"219"},{"ruleId":"209","severity":1,"message":"218","line":30,"column":110,"nodeType":"211","messageId":"212","endLine":30,"endColumn":111,"suggestions":"220"},{"ruleId":"182","severity":1,"message":"221","line":17,"column":8,"nodeType":"184","endLine":17,"endColumn":10,"suggestions":"222"},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],["223"],["224"],["223"],["224"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currUser.colors', 'currUser.name', 'location.state', and 'match.params.roomName'. Either include them or remove the dependency array.","ArrayExpression",["225"],["223"],["224"],["223"],["224"],"no-unused-vars","'VideoChat' is defined but never used.","Identifier","unusedVar",["223"],["224"],["223"],["224"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["226"],"React Hook useEffect has a missing dependency: 'setKeyboardShortcuts'. Either include it or remove the dependency array.",["227"],"'useState' is defined but never used.","'Image' is defined but never used.","'playbackRate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadFromQueue', 'loadVideo', 'log', 'modifyVideoState', and 'updateVideoProps'. Either include them or remove the dependency array. If 'log' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["228"],["223"],["224"],"no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["229","230"],["231","232"],["233","234"],["235","236"],"'validateSoundCloudUrl' is assigned a value but never used.","Unnecessary escape character: \\..",["237","238"],["239","240"],"React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.",["241"],"no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"messageId":"250","fix":"251","desc":"252"},{"messageId":"253","fix":"254","desc":"255"},{"messageId":"250","fix":"256","desc":"252"},{"messageId":"253","fix":"257","desc":"255"},{"messageId":"250","fix":"258","desc":"252"},{"messageId":"253","fix":"259","desc":"255"},{"messageId":"250","fix":"260","desc":"252"},{"messageId":"253","fix":"261","desc":"255"},{"messageId":"250","fix":"262","desc":"252"},{"messageId":"253","fix":"263","desc":"255"},{"messageId":"250","fix":"264","desc":"252"},{"messageId":"253","fix":"265","desc":"255"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [location.pathname, history, match.params.roomName, location.state, currUser.name, currUser.colors]",{"range":"268","text":"269"},"Update the dependencies array to be: [state]",{"range":"270","text":"271"},"Update the dependencies array to be: [setKeyboardShortcuts]",{"range":"272","text":"273"},"Update the dependencies array to be: [loadFromQueue, loadVideo, log, modifyVideoState, updateVideoProps]",{"range":"274","text":"275"},"removeEscape",{"range":"276","text":"277"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"278","text":"279"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"280","text":"277"},{"range":"281","text":"279"},{"range":"282","text":"277"},{"range":"283","text":"279"},{"range":"284","text":"277"},{"range":"285","text":"279"},{"range":"286","text":"277"},{"range":"287","text":"279"},{"range":"288","text":"277"},{"range":"289","text":"279"},"Update the dependencies array to be: [props.peer]",{"range":"290","text":"291"},[6977,7005],"[location.pathname, history, match.params.roomName, location.state, currUser.name, currUser.colors]",[6098,6100],"[state]",[10489,10491],"[setKeyboardShortcuts]",[4750,4752],"[loadFromQueue, loadVideo, log, modifyVideoState, updateVideoProps]",[918,919],"",[918,918],"\\",[930,931],[930,930],[1033,1034],[1033,1033],[1045,1046],[1045,1045],[1222,1223],[1222,1222],[1243,1244],[1243,1243],[363,365],"[props.peer]"]