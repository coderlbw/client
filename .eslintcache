[{"H:\\movie-party\\client\\src\\index.js":"1","H:\\movie-party\\client\\src\\App.js":"2","H:\\movie-party\\client\\src\\components\\Join\\JoinRoom.js":"3","H:\\movie-party\\client\\src\\components\\Socket.js":"4","H:\\movie-party\\client\\src\\utils\\adjectives.js":"5","H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Chat.js":"6","H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueItem.js":"7","H:\\movie-party\\client\\src\\components\\Room\\Room.js":"8","H:\\movie-party\\client\\src\\utils\\generateWords.js":"9","H:\\movie-party\\client\\src\\utils\\nouns.js":"10","H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Messages\\Messages.js":"11","H:\\movie-party\\client\\src\\components\\Panel\\Chat\\ChatInput\\ChatInput.js":"12","H:\\movie-party\\client\\src\\reportWebVitals.js":"13","H:\\movie-party\\client\\src\\components\\Panel\\Panel.js":"14","H:\\movie-party\\client\\src\\utils\\userInfo.js":"15","H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Messages\\Message\\Message.js":"16","H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueHistory.js":"17","H:\\movie-party\\client\\src\\components\\Panel\\Settings\\Settings.js":"18","H:\\movie-party\\client\\src\\components\\Panel\\Users\\Users.js":"19","H:\\movie-party\\client\\src\\components\\Video\\Player\\Player.js":"20","H:\\movie-party\\client\\src\\components\\Video\\Search\\Search.js":"21","H:\\movie-party\\client\\src\\components\\Video\\Video.js":"22","H:\\movie-party\\client\\src\\components\\Video\\Player\\Slider.js":"23","H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\SearchResults.js":"24","H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\ListItem.js":"25","H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueList.js":"26"},{"size":500,"mtime":1607979670262,"results":"27","hashOfConfig":"28"},{"size":610,"mtime":1608086017717,"results":"29","hashOfConfig":"28"},{"size":1519,"mtime":1608086091328,"results":"30","hashOfConfig":"28"},{"size":194,"mtime":1608459809764,"results":"31","hashOfConfig":"28"},{"size":61931,"mtime":1608084660500,"results":"32","hashOfConfig":"28"},{"size":1123,"mtime":1608160664691,"results":"33","hashOfConfig":"28"},{"size":1362,"mtime":1608160078345,"results":"34","hashOfConfig":"28"},{"size":8347,"mtime":1608451080749,"results":"35","hashOfConfig":"28"},{"size":657,"mtime":1608084633733,"results":"36","hashOfConfig":"28"},{"size":25528,"mtime":1608084676671,"results":"37","hashOfConfig":"28"},{"size":614,"mtime":1608160416802,"results":"38","hashOfConfig":"28"},{"size":1295,"mtime":1608160537306,"results":"39","hashOfConfig":"28"},{"size":362,"mtime":1607979670262,"results":"40","hashOfConfig":"28"},{"size":2727,"mtime":1608450961369,"results":"41","hashOfConfig":"28"},{"size":1113,"mtime":1608175517295,"results":"42","hashOfConfig":"28"},{"size":2334,"mtime":1608160368841,"results":"43","hashOfConfig":"28"},{"size":2661,"mtime":1608160001345,"results":"44","hashOfConfig":"28"},{"size":3532,"mtime":1608160727345,"results":"45","hashOfConfig":"28"},{"size":743,"mtime":1608158515890,"results":"46","hashOfConfig":"28"},{"size":13365,"mtime":1608449623783,"results":"47","hashOfConfig":"28"},{"size":5687,"mtime":1608457035202,"results":"48","hashOfConfig":"28"},{"size":6980,"mtime":1608455115954,"results":"49","hashOfConfig":"28"},{"size":7918,"mtime":1608449673208,"results":"50","hashOfConfig":"28"},{"size":1326,"mtime":1607978263296,"results":"51","hashOfConfig":"28"},{"size":1508,"mtime":1607978263296,"results":"52","hashOfConfig":"28"},{"size":622,"mtime":1608161116388,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ljog0t",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\movie-party\\client\\src\\index.js",[],"H:\\movie-party\\client\\src\\App.js",[],["112","113"],"H:\\movie-party\\client\\src\\components\\Join\\JoinRoom.js",[],"H:\\movie-party\\client\\src\\components\\Socket.js",[],"H:\\movie-party\\client\\src\\utils\\adjectives.js",[],["114","115"],"H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Chat.js",[],["116","117"],"H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueItem.js",[],"H:\\movie-party\\client\\src\\components\\Room\\Room.js",["118"],"H:\\movie-party\\client\\src\\utils\\generateWords.js",[],"H:\\movie-party\\client\\src\\utils\\nouns.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Messages\\Messages.js",[],["119","120"],"H:\\movie-party\\client\\src\\components\\Panel\\Chat\\ChatInput\\ChatInput.js",[],"H:\\movie-party\\client\\src\\reportWebVitals.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\Panel.js",[],"H:\\movie-party\\client\\src\\utils\\userInfo.js",[],["121","122"],"H:\\movie-party\\client\\src\\components\\Panel\\Chat\\Messages\\Message\\Message.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueHistory.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\Settings\\Settings.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\Users\\Users.js",[],"H:\\movie-party\\client\\src\\components\\Video\\Player\\Player.js",["123","124"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport screenful from \"screenfull\";\r\nimport Controls from \"./Controls\";\r\n\r\nimport './Player.scss';\r\n\r\nlet count = 0;\r\n\r\nfunction iOS() {\r\n    return [\r\n        'iPad Simulator',\r\n        'iPhone Simulator',\r\n        'iPod Simulator',\r\n        'iPad',\r\n        'iPhone',\r\n        'iPod'\r\n    ].includes(navigator.platform)\r\n        // iPad on iOS 13 detection\r\n        || (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\r\n}\r\n\r\nfunction Player({ videoProps, sendVideoState, updateVideoProps, loadVideo, loadFromQueue, playerRef }) {\r\n    const [isVideoStarted, setIsVideoStarted] = useState(false);\r\n    const [isVideoEnded, setIsVideoEnded] = useState(false);\r\n    const [state, setState] = useState({\r\n        pip: false,\r\n        playing: false,\r\n        light: false,\r\n        muted: false,\r\n        played: 0,\r\n        duration: 0,\r\n        playbackRate: 1.0,\r\n        volume: 1.0,\r\n        seeking: false,\r\n        isFullscreen: false,\r\n        jumpedTime: 0\r\n    });\r\n\r\n    const playerContainerRef = useRef(null);\r\n    const controlsRef = useRef(null);\r\n\r\n    const currentTime = (playerRef && playerRef.current) ? playerRef.current.getCurrentTime() : 0;\r\n    const duration = (playerRef && playerRef.current) ? playerRef.current.getDuration() : 0;\r\n    // const elapsedTime = timeDisplayFormat == \"normal\" ? format(currentTime) : `-${format(duration - currentTime)}`;\r\n    // const totalDuration = format(duration);\r\n\r\n    const {\r\n        light,\r\n        muted,\r\n        playbackRate,\r\n        pip,\r\n        seeking,\r\n        volume,\r\n        isFullscreen,\r\n        jumpedTime\r\n    } = state;\r\n\r\n    const {\r\n        queue,\r\n        history,\r\n        playing,\r\n        seekTime,\r\n        receiving,\r\n        initVideo,\r\n        videoType\r\n    } = videoProps;\r\n\r\n    const handlePlayPause = () => {\r\n        const seekTime = playerRef.current.getCurrentTime();\r\n        if (playing) {\r\n            // Going to pause\r\n            updateVideoProps({\r\n                playing: false,\r\n                seekTime,\r\n                receiving: false\r\n            });\r\n            sendVideoState({\r\n                eventName: 'syncPause',\r\n                eventParams: { seekTime }\r\n            });\r\n            if (isVideoEnded) playerRef.current.seekTo(0);\r\n            // console.log(\"PAUSING\")\r\n        } else {\r\n            // Going to play\r\n            updateVideoProps({\r\n                playing: true,\r\n                seekTime,\r\n                receiving: false\r\n            });\r\n            sendVideoState({\r\n                eventName: 'syncPlay',\r\n                eventParams: { seekTime }\r\n            });\r\n            // console.log(\"PLAYING\")\r\n        }\r\n    };\r\n\r\n    const handleRewind = () => {\r\n        let newTime = playerRef.current.getCurrentTime() - 10;\r\n        if (newTime < 0) newTime = 0;\r\n        playerRef.current.seekTo(newTime);\r\n        setState({ ...state, seeking: true, jumpedTime: newTime });\r\n        sendVideoState({\r\n            eventName: 'syncPlay',\r\n            eventParams: { seekTime: newTime }\r\n        });\r\n    };\r\n\r\n    const handleFastForward = () => {\r\n        let newTime = playerRef.current.getCurrentTime() + 10;\r\n        if (duration && newTime > duration) newTime = duration;\r\n        playerRef.current.seekTo(newTime);\r\n        setState({ ...state, seeking: true, jumpedTime: newTime });\r\n        sendVideoState({\r\n            eventName: 'syncPlay',\r\n            eventParams: { seekTime: newTime }\r\n        });\r\n    };\r\n\r\n    const handleProgress = (changeState) => {\r\n        if (count > 1) {\r\n            hideControls();\r\n            count = 0;\r\n        }\r\n        if (controlsRef.current.style.opacity === 1) {\r\n            count += 1;\r\n        }\r\n        if (!seeking) {\r\n            setState({ ...state, ...changeState });\r\n        }\r\n    };\r\n    const handleSeekMouseDown = (newTime) => {\r\n        // // const newTime = getProgressBarTime(e);\r\n        // newTime = newTime[0]\r\n        console.log(\"DOWN\", newTime);\r\n        // // setState({ ...state, seeking: true, played: parseFloat(newTime / 100) });\r\n        // playerRef.current.seekTo(newTime, \"seconds\");\r\n        // sendVideoState({\r\n        //     eventName: 'syncSeek',\r\n        //     eventParams: { seekTime: newTime }\r\n        // });\r\n    };\r\n    const handleSeek = (newTime) => {\r\n        newTime = newTime[0];\r\n        if (newTime < 0) newTime = 0;\r\n        else if (duration && newTime > duration) newTime = duration;\r\n        setState({ ...state, seeking: true, jumpedTime: newTime });\r\n        playerRef.current.seekTo(newTime, \"seconds\");\r\n        sendVideoState({\r\n            eventName: 'syncSeek',\r\n            eventParams: { seekTime: newTime }\r\n        });\r\n    }\r\n    const handleVolumeChange = (newValue) => {\r\n        newValue = newValue[0];\r\n        if (newValue < 0) newValue = 0;\r\n        else if (newValue > 1) newValue = 1;\r\n        setState({\r\n            ...state,\r\n            volume: parseFloat(newValue),\r\n            muted: newValue === 0 ? true : false,\r\n        });\r\n    };\r\n\r\n    const toggleFullScreen = () => {\r\n        screenful.toggle(playerContainerRef.current);\r\n    }\r\n    const handleMouseMove = () => {\r\n        showControls();\r\n        count = 0;\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setTimeout(function () {\r\n            hideControls();\r\n            count = 0;\r\n        }, 200);\r\n    };\r\n\r\n    const handlePlaybackRate = (rate) => {\r\n        if (rate === 0) rate = 0.5;\r\n        setState({ ...state, playbackRate: rate });\r\n        updateVideoProps({ receiving: false });\r\n        let eventParams = { playbackRate: rate };\r\n        sendVideoState({\r\n            eventName: 'syncRateChange',\r\n            eventParams: eventParams\r\n        });\r\n    };\r\n\r\n    const handleMute = () => {\r\n        setState({ ...state, muted: !muted });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!iOS())\r\n            screenful.on('change', () => setState({ ...state, isFullscreen: screenful.isFullscreen }));\r\n    }, [])\r\n\r\n    const showControls = () => {\r\n        if (isVideoStarted || iOS()) {\r\n            controlsRef.current.style.opacity = 1;\r\n            controlsRef.current.style.pointerEvents = \"auto\";\r\n            controlsRef.current.style.cursor = \"auto\";\r\n            playerContainerRef.current.style.cursor = \"auto\";\r\n        }\r\n    }\r\n    const hideControls = () => {\r\n        controlsRef.current.style.opacity = 0;\r\n        controlsRef.current.style.pointerEvents = \"none\";\r\n        controlsRef.current.style.cursor = \"none\";\r\n        playerContainerRef.current.style.cursor = \"none\";\r\n    }\r\n    const handleVideoClick = (e) => {\r\n        if (e.target === e.currentTarget && (isVideoStarted || iOS())) handlePlayPause()\r\n    }\r\n    const onPlay = () => {\r\n        setIsVideoEnded(false);\r\n        setState({ ...state, seeking: false });\r\n    }\r\n    const onPause = () => {\r\n        setState({ ...state, seeking: false });\r\n    }\r\n    const onEnded = () => {\r\n        updateVideoProps({ playing: false });\r\n        setIsVideoEnded(true);\r\n        if (receiving) {\r\n            updateVideoProps({ receiving: false });\r\n        } else {\r\n            // log(\"ENDING\", 'me');\r\n            if (queue.length > 0) {\r\n                updateVideoProps({ playing: true });\r\n                sendVideoState({\r\n                    eventName: 'syncLoadFromQueue',\r\n                    eventParams: {\r\n                        queue: queue,\r\n                    }\r\n                });\r\n                loadFromQueue(queue);\r\n            }\r\n        }\r\n    }\r\n    const onReady = () => {\r\n        if (receiving) {\r\n            loadVideo(history[0], true);\r\n            if (!playing) setIsVideoStarted(true);\r\n            else setIsVideoStarted(false);\r\n        }\r\n    }\r\n    const onStart = () => {\r\n        if (!receiving)\r\n            setIsVideoStarted(true);\r\n    }\r\n\r\n    const code = (e) => {\r\n        e = e || window.event;\r\n        return (e.key || e.keyCode || e.which);\r\n    }\r\n    const setKeyboardShortcuts = (e) => {\r\n        e.preventDefault();\r\n        let key = code(e);\r\n        // console.log(key);\r\n        switch (key) {\r\n            // case ' ':\r\n            // case 'k':\r\n            //     handlePlayPause()\r\n            //     break;\r\n            // case 'm':\r\n            //     handleMute();\r\n            //     break;\r\n            case 'ArrowLeft':\r\n            case 'j':\r\n                handleRewind();\r\n                break;\r\n            case 'ArrowRight':\r\n            case 'l':\r\n                handleFastForward();\r\n                break;\r\n            case 'f':\r\n                toggleFullScreen();\r\n                break;\r\n            // case 'i':\r\n            //     // enablePip();\r\n            //     break;\r\n            // case 'c':\r\n            //     // enable captions\r\n            //     break;\r\n            // case 'ArrowUp':\r\n            //     handleVolumeChange([volume + 0.2]);\r\n            //     break;\r\n            // case 'ArrowDown':\r\n            //     handleVolumeChange([volume - 0.2]);\r\n            //     break;\r\n            default:\r\n                break\r\n            // // Is a number\r\n            // if (isFinite(key)) {\r\n            // }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // let clickCount = 0;\r\n        // let singleClickTimer;\r\n        const handleClickFocus = (e) => {\r\n            let player = playerContainerRef.current;\r\n            if (!player) return;\r\n            if (!player.contains(e.target)) {\r\n                document.removeEventListener('keydown', setKeyboardShortcuts);\r\n            } else if (e.target.classList.contains('videoPlayerContainer')) {\r\n                document.addEventListener('keydown', setKeyboardShortcuts);\r\n                // clickCount++;\r\n                // if (clickCount === 1) {\r\n                //     singleClickTimer = setTimeout(function () {\r\n                //         clickCount = 0;\r\n                //         // handleVideoClick();\r\n                //     }, 300);\r\n                // } else if (clickCount === 2) {\r\n                //     clearTimeout(singleClickTimer);\r\n                //     clickCount = 0;\r\n                //     toggleFullScreen();\r\n                // }\r\n            }\r\n        }\r\n        document.addEventListener('click', handleClickFocus);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickFocus);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                onMouseMove={handleMouseMove}\r\n                onMouseLeave={handleMouseLeave}\r\n                ref={playerContainerRef}\r\n                className='videoPlayerContainer'\r\n                style={{ display: initVideo ? 'block' : 'none' }}\r\n                onClick={handleVideoClick}\r\n            >\r\n                <ReactPlayer\r\n                    ref={playerRef}\r\n                    className='videoPlayer'\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    url={history[0] ? history[0].video.url : ''}\r\n                    pip={pip}\r\n                    playing={playing}\r\n                    controls={false}\r\n                    light={light}\r\n                    loop={false}\r\n                    playbackRate={playbackRate}\r\n                    volume={volume}\r\n                    muted={muted}\r\n                    onProgress={handleProgress}\r\n                    onEnded={onEnded}\r\n                    onReady={onReady}\r\n                    onStart={onStart}\r\n                    onPlay={onPlay}\r\n                    onPause={onPause}\r\n                    config={{\r\n                        file: {\r\n                            attributes: {\r\n                                crossOrigin: \"anonymous\",\r\n                            },\r\n                        },\r\n                        vimeo: { playerOptions: { controls: false } },\r\n                        soundcloud: {\r\n                            options: {\r\n                                buying: false,\r\n                                sharing: false,\r\n                                download: false,\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n                <Controls\r\n                    ref={controlsRef}\r\n                    onSeekMouseDown={handleSeekMouseDown}\r\n                    onSeekMouseUp={handleSeek}\r\n                    onRewind={handleRewind}\r\n                    onPlayPause={handlePlayPause}\r\n                    onFastForward={handleFastForward}\r\n                    playing={playing}\r\n                    onMute={handleMute}\r\n                    muted={muted}\r\n                    onVolumeChange={handleVolumeChange}\r\n                    playbackRate={playbackRate}\r\n                    onPlaybackRateChange={handlePlaybackRate}\r\n                    onToggleFullScreen={toggleFullScreen}\r\n                    volume={volume}\r\n                    currentTime={currentTime}\r\n                    duration={duration}\r\n                    seekTime={seekTime}\r\n                    seeking={seeking}\r\n                    isFullscreen={isFullscreen}\r\n                    jumpedTime={jumpedTime}\r\n                    videoType={videoType}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Player;","H:\\movie-party\\client\\src\\components\\Video\\Search\\Search.js",[],"H:\\movie-party\\client\\src\\components\\Video\\Video.js",["125","126"],"H:\\movie-party\\client\\src\\components\\Video\\Player\\Slider.js",[],"H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\SearchResults.js",[],"H:\\movie-party\\client\\src\\components\\Video\\Search\\SearchResults\\ListItem.js",[],"H:\\movie-party\\client\\src\\components\\Panel\\QueueHistory\\QueueList.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"129","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":177,"column":8,"nodeType":"137","endLine":177,"endColumn":36,"suggestions":"138"},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","replacedBy":"140"},{"ruleId":"127","replacedBy":"141"},{"ruleId":"129","replacedBy":"142"},{"ruleId":"135","severity":1,"message":"143","line":199,"column":8,"nodeType":"137","endLine":199,"endColumn":10,"suggestions":"144"},{"ruleId":"135","severity":1,"message":"145","line":329,"column":8,"nodeType":"137","endLine":329,"endColumn":10,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":20,"column":40,"nodeType":"149","messageId":"150","endLine":20,"endColumn":52},{"ruleId":"135","severity":1,"message":"151","line":120,"column":8,"nodeType":"137","endLine":120,"endColumn":10,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],["153"],["154"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currUser.colors', 'currUser.name', 'location.state', and 'match.params.roomName'. Either include them or remove the dependency array.","ArrayExpression",["155"],["153"],["154"],["153"],["154"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["156"],"React Hook useEffect has a missing dependency: 'setKeyboardShortcuts'. Either include it or remove the dependency array.",["157"],"no-unused-vars","'playbackRate' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'loadFromQueue', 'loadVideo', 'log', 'modifyVideoState', and 'updateVideoProps'. Either include them or remove the dependency array. If 'log' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [location.pathname, history, match.params.roomName, location.state, currUser.name, currUser.colors]",{"range":"167","text":"168"},"Update the dependencies array to be: [state]",{"range":"169","text":"170"},"Update the dependencies array to be: [setKeyboardShortcuts]",{"range":"171","text":"172"},"Update the dependencies array to be: [loadFromQueue, loadVideo, log, modifyVideoState, updateVideoProps]",{"range":"173","text":"174"},[6967,6995],"[location.pathname, history, match.params.roomName, location.state, currUser.name, currUser.colors]",[6098,6100],"[state]",[10489,10491],"[setKeyboardShortcuts]",[4850,4852],"[loadFromQueue, loadVideo, log, modifyVideoState, updateVideoProps]"]